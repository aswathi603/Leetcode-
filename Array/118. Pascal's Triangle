118. Pascal's Triangle

Description:
Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Example 2:
Input: numRows = 1
Output: [[1]]
 

Constraints:
1 <= numRows <= 30

Solution 

Python/Python3

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        tri=[]

        for i in range(numRows):
            row=[1]

            if(i>0):
                for j in range(1,i):
                    row.append(tri[i-1][j-1]+tri[i-1][j])

                row.append(1)
            
            tri.append(row)
        return tri


C++

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> tri;

        for(int i=0;i<numRows;i++){

            vector<int> row(i+1,1);

            for(int j=1;j<i;j++){

                row[j]=tri[i-1][j-1]+tri[i-1][j];
                
            }

            tri.push_back(row);
        }
        return tri;
    }
};
